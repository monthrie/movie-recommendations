"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/generate";
exports.ids = ["pages/api/generate"];
exports.modules = {

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "(api)/./pages/api/generate.js":
/*!*******************************!*\
  !*** ./pages/api/generate.js ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n/* harmony default export */ async function __WEBPACK_DEFAULT_EXPORT__(req, res) {\n    if (!process.env.OPENAI_API_KEY) {\n        res.status(500).json({\n            error: {\n                message: \"OpenAI API key not configured, please follow instructions in README.md\"\n            }\n        });\n        return;\n    }\n    const movies = req.body.movies || [];\n    const uniqueness = Number(req.body.uniqueness) || 1;\n    if (movies.length === 0) {\n        res.status(400).json({\n            error: {\n                message: \"Please enter a valid list of movie titles\"\n            }\n        });\n        return;\n    }\n    try {\n        const openaiResponse = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"https://api.openai.com/v1/chat/completions\", {\n            model: \"gpt-3.5-turbo\",\n            messages: [\n                {\n                    role: \"system\",\n                    content: 'You are an assistant that suggests 5 movies based on a given list of favorite movies. Your introduction is just \"Here are 5 recomendations based on your favourites:\". You give a concise one sentence description of each movie and include the year it was made in brackets after the title.'\n                },\n                {\n                    role: \"user\",\n                    content: `My favorite movies are: ${movies.join(\", \")}. I'm looking for recommendations that are ${getUniquenessDescriptor(uniqueness)}.`\n                }\n            ],\n            max_tokens: 200\n        }, {\n            headers: {\n                \"Authorization\": `Bearer ${process.env.OPENAI_API_KEY}`,\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        console.log(\"OpenAI Response:\", openaiResponse.data.choices[0].message);\n        if (!openaiResponse.data || !openaiResponse.data.choices) {\n            throw new Error(\"Unexpected response from OpenAI API\");\n        }\n        const result = openaiResponse.data.choices[0].message.content;\n        res.status(200).json({\n            result: result\n        });\n    } catch (error) {\n        // Consider adjusting the error handling logic for your use case\n        if (error.response) {\n            console.error(error.response.status, error.response.data);\n            res.status(error.response.status).json(error.response.data);\n        } else {\n            console.error(`Error with OpenAI API request: ${error.message}`);\n            res.status(500).json({\n                error: {\n                    message: \"An error occurred during your request.\"\n                }\n            });\n        }\n    }\n}\nfunction getUniquenessDescriptor(level) {\n    switch(level){\n        case 1:\n            return \"very popular and mainstream\";\n        case 2:\n            return \"fairly popular\";\n        case 3:\n            return \"a mix of popular and less known\";\n        case 4:\n            return \"fairly unique and lesser-known\";\n        case 5:\n            return \"very obscure, and almost unknown\";\n        default:\n            return \"a mix of popular and less known\";\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvZ2VuZXJhdGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMEI7QUFFMUIsNkJBQWUsMENBQWdCQyxHQUFHLEVBQUVDLEdBQUcsRUFBRTtJQUN2QyxJQUFJLENBQUNDLFFBQVFDLEdBQUcsQ0FBQ0MsY0FBYyxFQUFFO1FBQy9CSCxJQUFJSSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQ25CQyxPQUFPO2dCQUNMQyxTQUFTO1lBQ1g7UUFDRjtRQUNBO0lBQ0YsQ0FBQztJQUVELE1BQU1DLFNBQVNULElBQUlVLElBQUksQ0FBQ0QsTUFBTSxJQUFJLEVBQUU7SUFDcEMsTUFBTUUsYUFBYUMsT0FBT1osSUFBSVUsSUFBSSxDQUFDQyxVQUFVLEtBQUs7SUFFbEQsSUFBSUYsT0FBT0ksTUFBTSxLQUFLLEdBQUc7UUFDdkJaLElBQUlJLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDbkJDLE9BQU87Z0JBQ0xDLFNBQVM7WUFDWDtRQUNGO1FBQ0E7SUFDRixDQUFDO0lBRUQsSUFBSTtRQUNGLE1BQU1NLGlCQUFpQixNQUFNZixrREFBVSxDQUFDLDhDQUE4QztZQUVwRmlCLE9BQU87WUFDUEMsVUFBVTtnQkFDUjtvQkFDRUMsTUFBTTtvQkFDTkMsU0FBUztnQkFDWDtnQkFDQTtvQkFDRUQsTUFBTTtvQkFDTkMsU0FBUyxDQUFDLHdCQUF3QixFQUFFVixPQUFPVyxJQUFJLENBQUMsTUFBTSwyQ0FBMkMsRUFBRUMsd0JBQXdCVixZQUFZLENBQUMsQ0FBQztnQkFDM0k7YUFDRDtZQUNEVyxZQUFZO1FBQ2QsR0FBRztZQUNEQyxTQUFTO2dCQUNQLGlCQUFpQixDQUFDLE9BQU8sRUFBRXJCLFFBQVFDLEdBQUcsQ0FBQ0MsY0FBYyxDQUFDLENBQUM7Z0JBQ3ZELGdCQUFnQjtZQUNsQjtRQUNGO1FBRUFvQixRQUFRQyxHQUFHLENBQUMsb0JBQW9CWCxlQUFlWSxJQUFJLENBQUNDLE9BQU8sQ0FBQyxFQUFFLENBQUNuQixPQUFPO1FBRXRFLElBQUksQ0FBQ00sZUFBZVksSUFBSSxJQUFJLENBQUNaLGVBQWVZLElBQUksQ0FBQ0MsT0FBTyxFQUFFO1lBQ3hELE1BQU0sSUFBSUMsTUFBTSx1Q0FBdUM7UUFDM0QsQ0FBQztRQUVELE1BQU1DLFNBQVNmLGVBQWVZLElBQUksQ0FBQ0MsT0FBTyxDQUFDLEVBQUUsQ0FBQ25CLE9BQU8sQ0FBQ1csT0FBTztRQUM3RGxCLElBQUlJLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRXVCLFFBQVFBO1FBQU87SUFDdEMsRUFBRSxPQUFNdEIsT0FBTztRQUNiLGdFQUFnRTtRQUNoRSxJQUFJQSxNQUFNdUIsUUFBUSxFQUFFO1lBQ2xCTixRQUFRakIsS0FBSyxDQUFDQSxNQUFNdUIsUUFBUSxDQUFDekIsTUFBTSxFQUFFRSxNQUFNdUIsUUFBUSxDQUFDSixJQUFJO1lBQ3hEekIsSUFBSUksTUFBTSxDQUFDRSxNQUFNdUIsUUFBUSxDQUFDekIsTUFBTSxFQUFFQyxJQUFJLENBQUNDLE1BQU11QixRQUFRLENBQUNKLElBQUk7UUFDNUQsT0FBTztZQUNMRixRQUFRakIsS0FBSyxDQUFDLENBQUMsK0JBQStCLEVBQUVBLE1BQU1DLE9BQU8sQ0FBQyxDQUFDO1lBQy9EUCxJQUFJSSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUNuQkMsT0FBTztvQkFDTEMsU0FBUztnQkFDWDtZQUNGO1FBQ0YsQ0FBQztJQUNIO0FBQ0YsQ0FBQztBQUNELFNBQVNhLHdCQUF3QlUsS0FBSyxFQUFFO0lBQ3RDLE9BQVFBO1FBQ04sS0FBSztZQUFHLE9BQU87UUFDZixLQUFLO1lBQUcsT0FBTztRQUNmLEtBQUs7WUFBRyxPQUFPO1FBQ2YsS0FBSztZQUFHLE9BQU87UUFDZixLQUFLO1lBQUcsT0FBTztRQUNmO1lBQVMsT0FBTztJQUNsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3BlbmFpLXF1aWNrc3RhcnQtbm9kZS8uL3BhZ2VzL2FwaS9nZW5lcmF0ZS5qcz82MjdjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIChyZXEsIHJlcykge1xuICBpZiAoIXByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZKSB7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgZXJyb3I6IHtcbiAgICAgICAgbWVzc2FnZTogXCJPcGVuQUkgQVBJIGtleSBub3QgY29uZmlndXJlZCwgcGxlYXNlIGZvbGxvdyBpbnN0cnVjdGlvbnMgaW4gUkVBRE1FLm1kXCIsXG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuO1xuICB9XG4gXG4gIGNvbnN0IG1vdmllcyA9IHJlcS5ib2R5Lm1vdmllcyB8fCBbXTtcbiAgY29uc3QgdW5pcXVlbmVzcyA9IE51bWJlcihyZXEuYm9keS51bmlxdWVuZXNzKSB8fCAxO1xuXG4gIGlmIChtb3ZpZXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgZXJyb3I6IHtcbiAgICAgICAgbWVzc2FnZTogXCJQbGVhc2UgZW50ZXIgYSB2YWxpZCBsaXN0IG9mIG1vdmllIHRpdGxlc1wiLFxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3Qgb3BlbmFpUmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KCdodHRwczovL2FwaS5vcGVuYWkuY29tL3YxL2NoYXQvY29tcGxldGlvbnMnLCB7XG4gICAgICBcbiAgICAgIG1vZGVsOiAnZ3B0LTMuNS10dXJibycsXG4gICAgICBtZXNzYWdlczogW1xuICAgICAgICB7XG4gICAgICAgICAgcm9sZTogJ3N5c3RlbScsXG4gICAgICAgICAgY29udGVudDogJ1lvdSBhcmUgYW4gYXNzaXN0YW50IHRoYXQgc3VnZ2VzdHMgNSBtb3ZpZXMgYmFzZWQgb24gYSBnaXZlbiBsaXN0IG9mIGZhdm9yaXRlIG1vdmllcy4gWW91ciBpbnRyb2R1Y3Rpb24gaXMganVzdCBcIkhlcmUgYXJlIDUgcmVjb21lbmRhdGlvbnMgYmFzZWQgb24geW91ciBmYXZvdXJpdGVzOlwiLiBZb3UgZ2l2ZSBhIGNvbmNpc2Ugb25lIHNlbnRlbmNlIGRlc2NyaXB0aW9uIG9mIGVhY2ggbW92aWUgYW5kIGluY2x1ZGUgdGhlIHllYXIgaXQgd2FzIG1hZGUgaW4gYnJhY2tldHMgYWZ0ZXIgdGhlIHRpdGxlLidcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHJvbGU6ICd1c2VyJyxcbiAgICAgICAgICBjb250ZW50OiBgTXkgZmF2b3JpdGUgbW92aWVzIGFyZTogJHttb3ZpZXMuam9pbignLCAnKX0uIEknbSBsb29raW5nIGZvciByZWNvbW1lbmRhdGlvbnMgdGhhdCBhcmUgJHtnZXRVbmlxdWVuZXNzRGVzY3JpcHRvcih1bmlxdWVuZXNzKX0uYFxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgbWF4X3Rva2VuczogMjAwLFxuICAgIH0sIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyICR7cHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVl9YCxcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgY29uc29sZS5sb2coJ09wZW5BSSBSZXNwb25zZTonLCBvcGVuYWlSZXNwb25zZS5kYXRhLmNob2ljZXNbMF0ubWVzc2FnZSk7XG5cbiAgICBpZiAoIW9wZW5haVJlc3BvbnNlLmRhdGEgfHwgIW9wZW5haVJlc3BvbnNlLmRhdGEuY2hvaWNlcykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmV4cGVjdGVkIHJlc3BvbnNlIGZyb20gT3BlbkFJIEFQSScpO1xuICB9XG4gICAgICBcbiAgY29uc3QgcmVzdWx0ID0gb3BlbmFpUmVzcG9uc2UuZGF0YS5jaG9pY2VzWzBdLm1lc3NhZ2UuY29udGVudDtcbiAgcmVzLnN0YXR1cygyMDApLmpzb24oeyByZXN1bHQ6IHJlc3VsdCB9KTtcbiAgfSBjYXRjaChlcnJvcikge1xuICAgIC8vIENvbnNpZGVyIGFkanVzdGluZyB0aGUgZXJyb3IgaGFuZGxpbmcgbG9naWMgZm9yIHlvdXIgdXNlIGNhc2VcbiAgICBpZiAoZXJyb3IucmVzcG9uc2UpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IucmVzcG9uc2Uuc3RhdHVzLCBlcnJvci5yZXNwb25zZS5kYXRhKTtcbiAgICAgIHJlcy5zdGF0dXMoZXJyb3IucmVzcG9uc2Uuc3RhdHVzKS5qc29uKGVycm9yLnJlc3BvbnNlLmRhdGEpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBFcnJvciB3aXRoIE9wZW5BSSBBUEkgcmVxdWVzdDogJHtlcnJvci5tZXNzYWdlfWApO1xuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICBlcnJvcjoge1xuICAgICAgICAgIG1lc3NhZ2U6ICdBbiBlcnJvciBvY2N1cnJlZCBkdXJpbmcgeW91ciByZXF1ZXN0LicsXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuZnVuY3Rpb24gZ2V0VW5pcXVlbmVzc0Rlc2NyaXB0b3IobGV2ZWwpIHtcbiAgc3dpdGNoIChsZXZlbCkge1xuICAgIGNhc2UgMTogcmV0dXJuIFwidmVyeSBwb3B1bGFyIGFuZCBtYWluc3RyZWFtXCI7XG4gICAgY2FzZSAyOiByZXR1cm4gXCJmYWlybHkgcG9wdWxhclwiO1xuICAgIGNhc2UgMzogcmV0dXJuIFwiYSBtaXggb2YgcG9wdWxhciBhbmQgbGVzcyBrbm93blwiO1xuICAgIGNhc2UgNDogcmV0dXJuIFwiZmFpcmx5IHVuaXF1ZSBhbmQgbGVzc2VyLWtub3duXCI7XG4gICAgY2FzZSA1OiByZXR1cm4gXCJ2ZXJ5IG9ic2N1cmUsIGFuZCBhbG1vc3QgdW5rbm93blwiO1xuICAgIGRlZmF1bHQ6IHJldHVybiBcImEgbWl4IG9mIHBvcHVsYXIgYW5kIGxlc3Mga25vd25cIjtcbiAgfVxufSJdLCJuYW1lcyI6WyJheGlvcyIsInJlcSIsInJlcyIsInByb2Nlc3MiLCJlbnYiLCJPUEVOQUlfQVBJX0tFWSIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsIm1lc3NhZ2UiLCJtb3ZpZXMiLCJib2R5IiwidW5pcXVlbmVzcyIsIk51bWJlciIsImxlbmd0aCIsIm9wZW5haVJlc3BvbnNlIiwicG9zdCIsIm1vZGVsIiwibWVzc2FnZXMiLCJyb2xlIiwiY29udGVudCIsImpvaW4iLCJnZXRVbmlxdWVuZXNzRGVzY3JpcHRvciIsIm1heF90b2tlbnMiLCJoZWFkZXJzIiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJjaG9pY2VzIiwiRXJyb3IiLCJyZXN1bHQiLCJyZXNwb25zZSIsImxldmVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/generate.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/generate.js"));
module.exports = __webpack_exports__;

})();